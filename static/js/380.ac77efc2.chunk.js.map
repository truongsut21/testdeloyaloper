{"version":3,"file":"static/js/380.ac77efc2.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","features/charts/components/LineChart.js","features/charts/components/BarChart.js","features/charts/components/DoughnutChart.js","features/charts/components/PieChart.js","features/charts/components/ScatterChart.js","features/charts/components/StackBarChart.js","features/charts/index.js","pages/protected/Charts.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\r\n\r\n  \r\n  function TitleCard({title, children, topMargin, TopSideButtons}){\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard"," function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport TitleCard from '../../../components/Cards/TitleCard';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend\r\n);\r\n\r\nfunction LineChart(){\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n\r\n  \r\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\n  const data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      fill: true,\r\n      label: 'MAU',\r\n      data: labels.map(() => { return Math.random() * 100 + 500 }),\r\n      borderColor: 'rgb(53, 162, 235)',\r\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n    },\r\n  ],\r\n};\r\n  \r\n\r\n    return(\r\n      <TitleCard title={\"Montly Active Users (in k)\"} >\r\n          <Line data={data} options={options}/>\r\n      </TitleCard>\r\n    )\r\n}\r\n\r\n\r\nexport default LineChart","import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport TitleCard from '../../../components/Cards/TitleCard';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nfunction BarChart(){\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          }\r\n        },\r\n      };\r\n      \r\n      const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n      \r\n      const data = {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: 'Store 1',\r\n            data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n            backgroundColor: 'rgba(255, 99, 132, 1)',\r\n          },\r\n          {\r\n            label: 'Store 2',\r\n            data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n            backgroundColor: 'rgba(53, 162, 235, 1)',\r\n          },\r\n        ],\r\n      };\r\n\r\n    return(\r\n      <TitleCard title={\"No of Orders\"} topMargin=\"mt-2\">\r\n            <Bar options={options} data={data} />\r\n      </TitleCard>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default BarChart","import {\r\n  Chart as ChartJS,\r\n  Filler,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport TitleCard from '../../../components/Cards/TitleCard';\r\nimport Subtitle from '../../../components/Typography/Subtitle';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend,\r\n    Tooltip,\r\n    Filler,\r\n    Legend);\r\n\r\nfunction DoughnutChart(){\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n        },\r\n      };\r\n      \r\n      const labels = ['Electronics', 'Home Applicances', 'Beauty', 'Furniture', 'Watches', 'Apparel'];\r\n      \r\n      const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: '# of Orders',\r\n                data: [122, 219, 30, 51, 82, 13],\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.8)',\r\n                  'rgba(54, 162, 235, 0.8)',\r\n                  'rgba(255, 206, 86, 0.8)',\r\n                  'rgba(75, 192, 192, 0.8)',\r\n                  'rgba(153, 102, 255, 0.8)',\r\n                  'rgba(255, 159, 64, 0.8)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                  'rgba(255, 159, 64, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              }\r\n        ],\r\n      };\r\n\r\n    return(\r\n        <TitleCard title={\"Orders by Category\"}>\r\n                <Doughnut options={options} data={data} />\r\n        </TitleCard>\r\n    )\r\n}\r\n\r\n\r\nexport default DoughnutChart","import {\r\n    Chart as ChartJS,\r\n    Filler,\r\n    ArcElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Pie } from 'react-chartjs-2';\r\n  import TitleCard from '../../../components/Cards/TitleCard';\r\n  import Subtitle from '../../../components/Typography/Subtitle';\r\n  \r\n  ChartJS.register(ArcElement, Tooltip, Legend,\r\n      Tooltip,\r\n      Filler,\r\n      Legend);\r\n  \r\n  function PieChart(){\r\n  \r\n      const options = {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n          },\r\n        };\r\n        \r\n        const labels = ['India', 'Middle East', 'Europe', 'US', 'Latin America', 'Asia(non-india)'];\r\n        \r\n        const data = {\r\n          labels,\r\n          datasets: [\r\n              {\r\n                  label: '# of Orders',\r\n                  data: [122, 219, 30, 51, 82, 13],\r\n                  backgroundColor: [\r\n                    'rgba(255, 99, 255, 0.8)',\r\n                    'rgba(54, 162, 235, 0.8)',\r\n                    'rgba(255, 206, 255, 0.8)',\r\n                    'rgba(75, 192, 255, 0.8)',\r\n                    'rgba(153, 102, 255, 0.8)',\r\n                    'rgba(255, 159, 255, 0.8)',\r\n                  ],\r\n                  borderColor: [\r\n                    'rgba(255, 99, 255, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 255, 1)',\r\n                    'rgba(75, 192, 255, 1)',\r\n                    'rgba(153, 102, 255, 1)',\r\n                    'rgba(255, 159, 255, 1)',\r\n                  ],\r\n                  borderWidth: 1,\r\n                }\r\n          ],\r\n        };\r\n  \r\n      return(\r\n          <TitleCard title={\"Orders by country\"}>\r\n                  <Pie options={options} data={data} />\r\n          </TitleCard>\r\n      )\r\n  }\r\n  \r\n  \r\n  export default PieChart","import {\r\n    Chart as ChartJS,\r\n    Filler,\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Scatter } from 'react-chartjs-2';\r\n  import TitleCard from '../../../components/Cards/TitleCard';\r\n  \r\n  ChartJS.register(ArcElement, Tooltip, Legend,\r\n      Tooltip,\r\n      Filler,\r\n      Legend);\r\n  \r\n  function ScatterChart(){\r\n  \r\n      const options = {\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true,\r\n                },\r\n            },\r\n        };\r\n        \r\n        const data = {\r\n          datasets: [\r\n            {\r\n              label: 'Orders > 1k',\r\n              data: Array.from({ length: 100 }, () => ({\r\n                x: Math.random() * 11,\r\n                y: Math.random() * 31,\r\n              })),\r\n              backgroundColor: 'rgba(255, 99, 132, 1)',\r\n            },\r\n            {\r\n                label: 'Orders > 2K',\r\n                data: Array.from({ length: 100 }, () => ({\r\n                  x: Math.random() * 12,\r\n                  y: Math.random() * 12,\r\n                })),\r\n                backgroundColor: 'rgba(0, 0, 255, 1)',\r\n              },\r\n          ],\r\n        };\r\n  \r\n      return(\r\n          <TitleCard title={\"No of Orders by month (in k)\"}>\r\n                  <Scatter options={options} data={data} />\r\n          </TitleCard>\r\n      )\r\n  }\r\n  \r\n  \r\n  export default ScatterChart","import {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Bar } from 'react-chartjs-2';\r\n  import TitleCard from '../../../components/Cards/TitleCard';\r\n  \r\n  ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n  \r\n  function StackBarChart(){\r\n  \r\n      const options = {\r\n            responsive: true,\r\n            scales: {\r\n                x: {\r\n                    stacked: true,\r\n                },\r\n                y: {\r\n                    stacked: true,\r\n                },\r\n            },\r\n        };\r\n        \r\n        const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n        \r\n        const data = {\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: 'Store 1',\r\n              data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n              backgroundColor: 'rgba(255, 99, 132, 1)',\r\n            },\r\n            {\r\n              label: 'Store 2',\r\n              data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n              backgroundColor: 'rgba(53, 162, 235, 1)',\r\n            },\r\n            {\r\n                label: 'Store 3',\r\n                data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n                backgroundColor: 'rgba(235, 162, 235, 1)',\r\n              },\r\n          ],\r\n        };\r\n  \r\n      return(\r\n        <TitleCard title={\"Sales\"} topMargin=\"mt-2\">\r\n              <Bar options={options} data={data} />\r\n        </TitleCard>\r\n  \r\n      )\r\n  }\r\n  \r\n  \r\n  export default StackBarChart","import LineChart from './components/LineChart'\r\nimport BarChart from './components/BarChart'\r\nimport DoughnutChart from './components/DoughnutChart'\r\nimport PieChart from './components/PieChart'\r\nimport ScatterChart from './components/ScatterChart'\r\nimport StackBarChart from './components/StackBarChart'\r\nimport Datepicker from \"react-tailwindcss-datepicker\"; \r\nimport { useState } from 'react'\r\n\r\n\r\n\r\n\r\nfunction Charts(){\r\n\r\n    const [dateValue, setDateValue] = useState({ \r\n        startDate: new Date(), \r\n        endDate: new Date() \r\n    }); \r\n    \r\n    const handleDatePickerValueChange = (newValue) => {\r\n        console.log(\"newValue:\", newValue); \r\n        setDateValue(newValue); \r\n    } \r\n\r\n    return(\r\n        <>\r\n        <Datepicker \r\n                containerClassName=\"w-72\" \r\n                value={dateValue} \r\n                theme={\"light\"}\r\n                inputClassName=\"input input-bordered w-72\" \r\n                popoverDirection={\"down\"}\r\n                toggleClassName=\"invisible\"\r\n                onChange={handleDatePickerValueChange} \r\n                showShortcuts={true} \r\n                primaryColor={\"white\"} \r\n            /> \r\n        {/** ---------------------- Different charts ------------------------- */}\r\n            <div className=\"grid lg:grid-cols-2 mt-0 grid-cols-1 gap-6\">\r\n                <StackBarChart />\r\n                <BarChart />\r\n            </div>\r\n\r\n        \r\n            <div className=\"grid lg:grid-cols-2 mt-4 grid-cols-1 gap-6\">\r\n                <DoughnutChart />\r\n                <PieChart />\r\n            </div>\r\n\r\n            <div className=\"grid lg:grid-cols-2 mt-4 grid-cols-1 gap-6\">\r\n                <ScatterChart />\r\n                <LineChart />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Charts","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Charts from '../../features/charts'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Analytics\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        <Charts />\r\n    )\r\n}\r\n\r\nexport default InternalPage"],"names":["title","children","topMargin","TopSideButtons","className","styleClass","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","labels","data","datasets","fill","label","map","Math","random","borderColor","backgroundColor","TitleCard","options","responsive","plugins","legend","position","BarElement","ArcElement","borderWidth","Array","from","length","x","y","scales","beginAtZero","stacked","useState","startDate","Date","endDate","dateValue","setDateValue","containerClassName","value","theme","inputClassName","popoverDirection","toggleClassName","onChange","newValue","console","log","showShortcuts","primaryColor","dispatch","useDispatch","useEffect","setPageTitle"],"sourceRoot":""}